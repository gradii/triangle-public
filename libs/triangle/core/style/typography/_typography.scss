@use "sass:map";
@use "typography-utils";

// Represents a typography level from the Material design spec.
@function tri-typography-level(
  $font-size,
  $line-height: $font-size,
  $font-weight: 400,
  $font-family: null,
  $letter-spacing: null) {

  @return (
    font-size: $font-size,
    line-height: $line-height,
    font-weight: $font-weight,
    font-family: $font-family,
    letter-spacing: $letter-spacing
  );
}

// Represents a collection of typography levels.
// Defaults come from https://material.io/guidelines/style/typography.html
// Note: The spec doesn't mention letter spacing. The values here come from
// eyeballing it until it looked exactly like the spec examples.
@function tri-typography-config(
  $font-family:   "Roboto, \"Helvetica Neue\", sans-serif",
  $display-4:     tri-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),
  $display-3:     tri-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),
  $display-2:     tri-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),
  $display-1:     tri-typography-level(34px, 40px, 400),
  $headline:      tri-typography-level(24px, 32px, 400),
  $title:         tri-typography-level(20px, 32px, 500),
  $subheading-2:  tri-typography-level(16px, 28px, 400),
  $subheading-1:  tri-typography-level(15px, 24px, 400),
  $body-2:        tri-typography-level(14px, 24px, 500),
  $body-1:        tri-typography-level(14px, 20px, 400),
  $caption:       tri-typography-level(12px, 20px, 400),
  $button:        tri-typography-level(14px, 14px, 500),
  // Line-height must be unit-less fraction of the font-size.
  $input:         tri-typography-level(inherit, 1.125, 400)
) {

  // Declare an initial map with all of the levels.
  $config : (
    display-4: $display-4,
    display-3: $display-3,
    display-2: $display-2,
    display-1: $display-1,
    headline: $headline,
    title: $title,
    subheading-2: $subheading-2,
    subheading-1: $subheading-1,
    body-2: $body-2,
    body-1: $body-1,
    caption: $caption,
    button: $button,
    input: $input,
  );

  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.
  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.
  @each $key, $level in $config {
    @if map.get($level, font-family) == null {
      $new-level : map.merge($level, (font-family: $font-family));
      $config : map.merge($config, ($key: $new-level));
    }
  }

  // Add the base font family to the config.
  @return map.merge($config, (font-family: $font-family));
}

// Adds the base typography styles, based on a config.
@mixin tri-base-typography($config, $selector: ".tri-typography") {
  .tri-h1, .tri-headline, #{$selector} h1 {
    @include typography-utils.tri-typography-level-to-styles($config, headline);
    margin : 0 0 16px;
  }

  .tri-h2, .tri-title, #{$selector} h2 {
    @include typography-utils.tri-typography-level-to-styles($config, title);
    margin : 0 0 16px;
  }

  .tri-h3, .tri-subheading-2, #{$selector} h3 {
    @include typography-utils.tri-typography-level-to-styles($config, subheading-2);
    margin : 0 0 16px;
  }

  .tri-h4, .tri-subheading-1, #{$selector} h4 {
    @include typography-utils.tri-typography-level-to-styles($config, subheading-1);
    margin : 0 0 16px;
  }

  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for
  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em
  // and h6 at 0.67em.
  .tri-h5, #{$selector} h5 {
    @include typography-utils.tri-typography-font-shorthand(
      // calc is used here to support css variables
        calc(#{typography-utils.font-size($config, body-1)} * 0.83),
        typography-utils.font-weight($config, body-1),
        typography-utils.line-height($config, body-1),
        typography-utils.font-family($config, body-1)
    );

    margin : 0 0 12px;
  }

  .tri-h6, #{$selector} h6 {
    @include typography-utils.tri-typography-font-shorthand(
      // calc is used here to support css variables
        calc(#{typography-utils.font-size($config, body-1)} * 0.67),
        typography-utils.font-weight($config, body-1),
        typography-utils.line-height($config, body-1),
        typography-utils.font-family($config, body-1)
    );

    margin : 0 0 12px;
  }

  .tri-body-strong, .tri-body-2 {
    @include typography-utils.tri-typography-level-to-styles($config, body-2);
  }

  .tri-body, .tri-body-1, #{$selector} {
    @include typography-utils.tri-typography-level-to-styles($config, body-1);

    p {
      margin : 0 0 12px;
    }
  }

  .tri-small, .tri-caption {
    @include typography-utils.tri-typography-level-to-styles($config, caption);
  }

  .tri-display-4, #{$selector} .tri-display-4 {
    @include typography-utils.tri-typography-level-to-styles($config, display-4);
    margin : 0 0 56px;
  }

  .tri-display-3, #{$selector} .tri-display-3 {
    @include typography-utils.tri-typography-level-to-styles($config, display-3);
    margin : 0 0 64px;
  }

  .tri-display-2, #{$selector} .tri-display-2 {
    @include typography-utils.tri-typography-level-to-styles($config, display-2);
    margin : 0 0 64px;
  }

  .tri-display-1, #{$selector} .tri-display-1 {
    @include typography-utils.tri-typography-level-to-styles($config, display-1);
    margin : 0 0 64px;
  }
}
