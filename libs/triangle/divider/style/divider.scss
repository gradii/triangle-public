@use "sass:map";
@use "../../core/themes/theme";
@use "../../core/style/theming";
@use "../../core/style/variables" as v;


$prefix-cls: tri-divider;


$foreground    : theme.$foreground;
$background    : theme.$background;
$divider-color : theming.tri-color($foreground, divider);

$primary       : theme.$primary;
$warning       : theme.$warning;

$divider-orientation-margin: 30%  !default;
$divider-vertical-gutter: 0.5rem  !default;
$divider-text-padding: 0.5rem  !default;

// $accordion-disable-color : theming.tri-color(theme.$foreground, disabled-color) !default;
$text-color : theming.tri-color(theme.$foreground, text-color) !default;
$font-size-base : v.$font-size-base !default;

// $accordion-header-bg     : theming.tri-color(theme.$background, background-color-base) !default;
// $accordion-active-bg     : theming.tri-color(theme.$background, background-color-active) !default;
// $accordion-disable-bg    : theming.tri-color(theme.$background, disabled-bg) !default;

.#{$prefix-cls} {
  // @include reset-component();

  border-top: v.$border-width-base solid $divider-color;

  &-vertical {
    position: relative;
    top: -0.06em;
    display: inline-block;
    height: 0.9em;
    margin: 0 $divider-vertical-gutter;
    vertical-align: middle;
    border-top: 0;
    border-left: v.$border-width-base solid $divider-color;
  }

  &-horizontal {
    display: flex;
    clear: both;
    width: 100%;
    min-width: 100%;
    margin: 24px 0;
  }

  &-horizontal#{&}-with-text {
    display: flex;
    margin: 16px 0;
    color: v.$heading-color;
    font-weight: 500;
    font-size: v.$font-size-lg;
    white-space: nowrap;
    text-align: center;
    border-top: 0;
    border-top-color: $divider-color;
    gap: 0.5em;
    align-items: center;

    &::before,
    &::after {
      position: relative;
      top: 50%;
      width: 50%;
      border-top: v.$border-width-base solid transparent;
      // Chrome not accept `inherit` in `border-top`
      border-top-color: inherit;
      border-bottom: 0;
      transform: translateY(50%);
      content: '';
    }
  }

  &-horizontal#{&}-with-text-left {
    &::before {
      top: 50%;
      width: $divider-orientation-margin;
    }

    &::after {
      top: 50%;
      width: 100% - $divider-orientation-margin;
    }
  }

  &-horizontal#{&}-with-text-right {
    &::before {
      top: 50%;
      width: 100% - $divider-orientation-margin;
    }

    &::after {
      top: 50%;
      width: $divider-orientation-margin;
    }
  }

  &-inner-text {
    display: inline-block;
    padding: 0 $divider-text-padding;
  }

  &-dashed {
    background: none;
    border-color: $divider-color;
    border-style: dashed;
    border-width: v.$border-width-base 0 0;
  }

  &-horizontal#{&}-with-text#{&}-dashed {
    &::before,
    &::after {
      border-style: dashed none none;
    }
  }

  &-vertical#{&}-dashed {
    border-width: 0 0 0 v.$border-width-base;
  }

  &-plain#{&}-with-text {
    color: $text-color;
    font-weight: normal;
    font-size: $font-size-base;
  }

  &-horizontal#{&}-with-text-left#{&}-no-default-orientation-margin-left {
    &::before {
      width: 0;
    }

    &::after {
      width: 100%;
    }

    .#{$prefix-cls}-inner-text {
      padding-left: 0;
    }
  }

  &-horizontal#{&}-with-text-right#{&}-no-default-orientation-margin-right {
    &::before {
      width: 100%;
    }

    &::after {
      width: 0;
    }

    .#{$prefix-cls}-inner-text {
      padding-right: 0;
    }
  }
}
